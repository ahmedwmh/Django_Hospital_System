# Generated by Django 4.2.16 on 2025-09-10 13:47

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('hospital', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.CharField(max_length=11, unique=True, validators=[django.core.validators.RegexValidator(message='رقم الهاتف يجب أن يكون 11 رقماً فقط', regex='^\\d{11}$')], verbose_name='رقم هاتف المريض')),
                ('date_of_birth', models.DateField(verbose_name='تاريخ الميلاد')),
                ('gender', models.CharField(choices=[('M', 'ذكر'), ('F', 'أنثى'), ('O', 'آخر')], max_length=1, verbose_name='الجنس')),
                ('blood_group', models.CharField(blank=True, choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-')], max_length=3, verbose_name='فصيلة الدم')),
                ('address', models.TextField(verbose_name='العنوان')),
                ('emergency_contact_name', models.CharField(max_length=100, verbose_name='اسم جهة الاتصال في الطوارئ')),
                ('emergency_contact_phone', models.CharField(max_length=17, verbose_name='رقم هاتف جهة الاتصال في الطوارئ')),
                ('medical_history', models.TextField(blank=True, verbose_name='التاريخ الطبي')),
                ('allergies', models.TextField(blank=True, verbose_name='الحساسيات')),
                ('is_active', models.BooleanField(default=True, verbose_name='نشط')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاريخ التحديث')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patients', to='hospital.doctor', verbose_name='الطبيب')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_patients', to=settings.AUTH_USER_MODEL, verbose_name='المستخدم الذي أنشأ السجل')),
            ],
            options={
                'db_table': 'patients',
            },
        ),
        migrations.CreateModel(
            name='Treatment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('treatment_name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled')], default='ACTIVE', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('disease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='treatments', to='hospital.disease')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='treatments', to='patients.patient')),
            ],
            options={
                'db_table': 'treatments',
            },
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_name', models.CharField(max_length=200)),
                ('test_type', models.CharField(choices=[('BLOOD', 'Blood Test'), ('URINE', 'Urine Test'), ('XRAY', 'X-Ray'), ('CT', 'CT Scan'), ('MRI', 'MRI'), ('ECG', 'ECG'), ('ECHO', 'Echocardiogram'), ('ULTRASOUND', 'Ultrasound'), ('BIOPSY', 'Biopsy'), ('CULTURE', 'Culture'), ('OTHER', 'Other')], max_length=20)),
                ('test_date', models.DateTimeField()),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled')], default='PENDING', max_length=20)),
                ('results', models.TextField(blank=True)),
                ('normal_range', models.CharField(blank=True, max_length=200)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('disease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tests', to='hospital.disease')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tests', to='patients.patient')),
            ],
            options={
                'db_table': 'tests',
            },
        ),
        migrations.CreateModel(
            name='Surgery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('surgery_name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('scheduled_date', models.DateTimeField()),
                ('actual_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('SCHEDULED', 'Scheduled'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled'), ('POSTPONED', 'Postponed')], default='SCHEDULED', max_length=20)),
                ('surgeon_name', models.CharField(max_length=200)),
                ('complications', models.CharField(choices=[('NONE', 'No Complications'), ('MINOR', 'Minor Complications'), ('MAJOR', 'Major Complications'), ('CRITICAL', 'Critical Complications')], default='NONE', max_length=20)),
                ('complications_description', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='surgeries', to='patients.patient')),
            ],
            options={
                'db_table': 'surgeries',
            },
        ),
        migrations.CreateModel(
            name='PatientDisease',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diagnosed_date', models.DateField()),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('TREATED', 'Treated'), ('CHRONIC', 'Chronic'), ('CURED', 'Cured')], default='ACTIVE', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('disease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_diseases', to='hospital.disease')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_diseases', to='patients.patient')),
            ],
            options={
                'db_table': 'patient_diseases',
            },
        ),
        migrations.CreateModel(
            name='TreatmentMedicine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dosage', models.CharField(max_length=100)),
                ('frequency', models.CharField(max_length=100)),
                ('duration_days', models.PositiveIntegerField()),
                ('instructions', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('medicine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='treatment_medicines', to='hospital.medicine')),
                ('treatment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='treatment_medicines', to='patients.treatment')),
            ],
            options={
                'db_table': 'treatment_medicines',
                'indexes': [models.Index(fields=['treatment'], name='treatment_m_treatme_6e3776_idx'), models.Index(fields=['medicine'], name='treatment_m_medicin_3ef05a_idx')],
                'unique_together': {('treatment', 'medicine')},
            },
        ),
        migrations.AddIndex(
            model_name='treatment',
            index=models.Index(fields=['patient'], name='treatments_patient_ee747c_idx'),
        ),
        migrations.AddIndex(
            model_name='treatment',
            index=models.Index(fields=['disease'], name='treatments_disease_0a280b_idx'),
        ),
        migrations.AddIndex(
            model_name='treatment',
            index=models.Index(fields=['status'], name='treatments_status_c8db0f_idx'),
        ),
        migrations.AddIndex(
            model_name='treatment',
            index=models.Index(fields=['start_date'], name='treatments_start_d_762362_idx'),
        ),
        migrations.AddIndex(
            model_name='test',
            index=models.Index(fields=['patient'], name='tests_patient_460d3d_idx'),
        ),
        migrations.AddIndex(
            model_name='test',
            index=models.Index(fields=['disease'], name='tests_disease_2f31b2_idx'),
        ),
        migrations.AddIndex(
            model_name='test',
            index=models.Index(fields=['test_type'], name='tests_test_ty_f7750f_idx'),
        ),
        migrations.AddIndex(
            model_name='test',
            index=models.Index(fields=['status'], name='tests_status_7b792f_idx'),
        ),
        migrations.AddIndex(
            model_name='test',
            index=models.Index(fields=['test_date'], name='tests_test_da_f56ad0_idx'),
        ),
        migrations.AddIndex(
            model_name='surgery',
            index=models.Index(fields=['patient'], name='surgeries_patient_318c4b_idx'),
        ),
        migrations.AddIndex(
            model_name='surgery',
            index=models.Index(fields=['status'], name='surgeries_status_d2b3ab_idx'),
        ),
        migrations.AddIndex(
            model_name='surgery',
            index=models.Index(fields=['scheduled_date'], name='surgeries_schedul_dffeec_idx'),
        ),
        migrations.AddIndex(
            model_name='surgery',
            index=models.Index(fields=['surgeon_name'], name='surgeries_surgeon_55cf19_idx'),
        ),
        migrations.AddIndex(
            model_name='patientdisease',
            index=models.Index(fields=['patient'], name='patient_dis_patient_e4c06c_idx'),
        ),
        migrations.AddIndex(
            model_name='patientdisease',
            index=models.Index(fields=['disease'], name='patient_dis_disease_24c15c_idx'),
        ),
        migrations.AddIndex(
            model_name='patientdisease',
            index=models.Index(fields=['status'], name='patient_dis_status_a4137a_idx'),
        ),
        migrations.AddIndex(
            model_name='patientdisease',
            index=models.Index(fields=['diagnosed_date'], name='patient_dis_diagnos_2e03f5_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='patientdisease',
            unique_together={('patient', 'disease')},
        ),
        migrations.AddIndex(
            model_name='patient',
            index=models.Index(fields=['doctor'], name='patients_doctor__b99e85_idx'),
        ),
        migrations.AddIndex(
            model_name='patient',
            index=models.Index(fields=['patient_id'], name='patients_patient_e63b14_idx'),
        ),
        migrations.AddIndex(
            model_name='patient',
            index=models.Index(fields=['is_active'], name='patients_is_acti_4a96f9_idx'),
        ),
        migrations.AddIndex(
            model_name='patient',
            index=models.Index(fields=['date_of_birth'], name='patients_date_of_24544d_idx'),
        ),
    ]
